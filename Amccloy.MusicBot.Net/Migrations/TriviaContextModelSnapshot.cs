// <auto-generated />
using System;
using Amccloy.MusicBot.Net.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Amccloy.MusicBot.Net.Migrations
{
    [DbContext(typeof(TriviaContext))]
    partial class TriviaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("trivia_questions")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Amccloy.MusicBot.Net.Dbo.MultiChoiceTriviaQuestionDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("text")
                        .HasColumnName("answer");

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<string[]>("FalseAnswers")
                        .HasColumnType("jsonb")
                        .HasColumnName("false_answers");

                    b.Property<string>("Question")
                        .HasColumnType("text")
                        .HasColumnName("question");

                    b.Property<int>("Source")
                        .HasColumnType("integer")
                        .HasColumnName("source");

                    b.HasKey("Id")
                        .HasName("pk_multi_choice_trivia_questions");

                    b.HasIndex("Category")
                        .HasDatabaseName("ix_multi_choice_trivia_questions_category");

                    b.HasIndex("Source")
                        .HasDatabaseName("ix_multi_choice_trivia_questions_source");

                    b.ToTable("multi_choice_trivia_questions", "trivia_questions");
                });

            modelBuilder.Entity("Amccloy.MusicBot.Net.Dbo.StandardTriviaQuestionDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("text")
                        .HasColumnName("answer");

                    b.Property<int>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<string>("Question")
                        .HasColumnType("text")
                        .HasColumnName("question");

                    b.Property<int>("Source")
                        .HasColumnType("integer")
                        .HasColumnName("source");

                    b.HasKey("Id")
                        .HasName("pk_standard_trivia_questions");

                    b.HasIndex("Category")
                        .HasDatabaseName("ix_standard_trivia_questions_category");

                    b.HasIndex("Source")
                        .HasDatabaseName("ix_standard_trivia_questions_source");

                    b.ToTable("standard_trivia_questions", "trivia_questions");
                });
#pragma warning restore 612, 618
        }
    }
}
